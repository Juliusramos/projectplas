From bb8d772be2e99078495871a71cd243d359a5dd22 Mon Sep 17 00:00:00 2001
From: "maun.quirimit.up" <maun.quirimit.up@phinmaed.com>
Date: Wed, 13 Aug 2025 12:44:46 +0800
Subject: [PATCH] Filling the missing and arranged

---
 .../Controllers/Admin/SubAdminController.php  |  51 ++-
 public/assets/dashboard.css                   | 116 +++---
 public/assets/user-management.css             | 139 +++++--
 resources/views/dashboard.blade.php           | 340 +++++++++---------
 .../profile/Admin/user-management.blade.php   | 196 +++++++---
 routes/web.php                                |  14 +-
 6 files changed, 543 insertions(+), 313 deletions(-)

diff --git a/app/Http/Controllers/Admin/SubAdminController.php b/app/Http/Controllers/Admin/SubAdminController.php
index 3e1c7f8..fb0575d 100644
--- a/app/Http/Controllers/Admin/SubAdminController.php
+++ b/app/Http/Controllers/Admin/SubAdminController.php
@@ -3,10 +3,12 @@
 namespace App\Http\Controllers\Admin;
 
 use App\Http\Controllers\Controller;
+use App\Models\Analyst;
 use Illuminate\Http\Request;
 use App\Models\User;
 use Illuminate\Support\Facades\Auth;
 use Illuminate\Validation\Rules\Password;
+use Illuminate\Support\Facades\Hash;
 
 
 class SubAdminController extends Controller
@@ -63,24 +65,59 @@ public function store(Request $request)
      */
     public function show(string $id)
     {
-        //
+
     }
 
     /**
      * Show the form for editing the specified resource.
      */
-    public function edit(string $id)
+    public function update (Request $request, string $id)
     {
-        //
+    $analyst = User::findOrFail($id);
+
+    $rules = [
+        'first_name' => 'required|string|max:255',
+        'last_name'  => 'required|string|max:255',
+        'email'      => 'required|string|email|max:255|unique:users,email,' . $analyst->id,
+    ];
+
+    // Only add password validation if filled
+    if ($request->filled('password')) {
+        $rules['password'] = [
+            'nullable',
+            'confirmed',
+            Password::min(8)
+                ->mixedCase()
+                ->letters()
+                ->numbers()
+                ->symbols(),
+        ];
     }
 
+    $validated = $request->validate($rules);
+
+    $analyst->first_name = $validated['first_name'];
+    $analyst->last_name  = $validated['last_name'];
+    $analyst->email      = $validated['email'];
+
+    // Only update password if new one is provided
+    if (!empty($validated['password'])) {
+        $analyst->password = Hash::make($validated['password']);
+    }
+
+    $analyst->save();
+
+    return redirect()->back()->with('success', 'User updated successfully!');
+    }
+
+
     /**
      * Update the specified resource in storage.
      */
-    public function update(Request $request, string $id)
-    {
-        //
-    }
+    // public function update(Request $request, string $id)
+    // {
+    //     //
+    // }
 
     /**
      * Remove the specified resource from storage.
diff --git a/public/assets/dashboard.css b/public/assets/dashboard.css
index 4a0a751..64a37a3 100644
--- a/public/assets/dashboard.css
+++ b/public/assets/dashboard.css
@@ -1,73 +1,81 @@
-.header-filter-container {
-      display: flex;
-      justify-content: space-between;
-      align-items: center;
-      margin-bottom: 30px;
-      margin-left: 40px;
-    }
-    .header-filter-container h1 {
+body {
+      font-family: 'Poppins', sans-serif;
+      background: radial-gradient(circle, rgba(114, 114, 114, 1) 0%, rgba(9, 121, 54, 1) 92%);
+      color: white;
+      min-height: 100vh;
+      overflow-x: hidden;
+  }
+  header {
+      text-align: center;
+      margin-bottom: 2rem;
+  }
+  header h1 {
+      font-weight: 700;
       font-size: 2rem;
+  }
+  header hr {
+      width: 80px;
+      border: 2px solid rgba(255,255,255,0.3);
+      margin: 10px auto;
+      border-radius: 2px;
+  }
+  .card {
+      background: rgba(255, 255, 255, 0.12);
+      border-radius: 15px;
+      box-shadow: 0 6px 20px rgba(0,0,0,0.25);
+      transition: transform 0.2s ease, box-shadow 0.2s ease;
+  }
+  .card:hover {
+      transform: translateY(-5px);
+      box-shadow: 0 8px 25px rgba(0,0,0,0.35);
+  }
+  .card-title {
       font-weight: 700;
-    }
-    .count-container {
-      display: flex;
-      gap: 20px;
-      flex-wrap: wrap;
-      margin-bottom: 30px;
-    }
-    .count-card {
-      flex: 1;
-      min-width: 260px;
-      background: rgba(52, 52, 52, 0.08);
-      padding: 24px;
-      border-radius: 20px;
-      text-align: center;
-      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
-    }
-    .count-title {
       font-size: 1.2rem;
-      margin-bottom: 10px;
-      color: #ccc;
-    }
-    .count-value {
-      font-size: 2.8rem;
-      font-weight: bold;
-      color: #ccc;
-    }
-    .chart-container {
-      background: #f5f5f510;
-      border-radius: 20px;
-      padding: 24px;
-      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
-      margin-bottom: 40px;
-    }
-    .calendar-container {
+      margin-bottom: 0.5rem;
+      color: white;
+
+  }
+  .stat-number {
+      font-size: 2rem;
+      font-weight: 700;
+  }
+  .text-highlight {
+      color: #4fd1c5;
+  }
+  .chart-card {
+      background: rgba(255, 255, 255, 0.08);
+      border-radius: 15px;
+      box-shadow: 0 6px 20px rgba(0,0,0,0.25);
+      padding: 1.5rem;
+  }
+  .calendar-container {
       background: rgba(255,255,255,0.08);
       border-radius: 16px;
       padding: 30px;
-    }
-    .calendar-title {
+      margin-top: 2rem;
+  }
+  .calendar-title {
       font-size: 1.5rem;
       font-weight: 600;
       margin-bottom: 20px;
-    }
-    .calendar-table {
+  }
+  .calendar-table {
       width: 100%;
       text-align: center;
       background-color: #fff;
       color: #000;
       border-radius: 6px;
       border-collapse: collapse;
-    }
-    .calendar-table th, .calendar-table td {
-      padding: 20px;
+  }
+  .calendar-table th, .calendar-table td {
+      padding: 15px;
       border: 1px solid #ddd;
-      position: relative;
-    }
-    .calendar-table thead {
+  }
+  .calendar-table thead {
       background-color: #f0f0f0;
-    }
-    #hover-popup {
+  }
+  #hover-popup {
       display: none;
       position: absolute;
       background-color: #fff;
@@ -78,4 +86,4 @@ .header-filter-container {
       pointer-events: none;
       z-index: 9999;
       box-shadow: 0 4px 10px rgba(0,0,0,0.3);
-    }
\ No newline at end of file
+  }
\ No newline at end of file
diff --git a/public/assets/user-management.css b/public/assets/user-management.css
index 7d76015..4c13f98 100644
--- a/public/assets/user-management.css
+++ b/public/assets/user-management.css
@@ -1,13 +1,81 @@
-
 #usertable {
-    background: #f5f5f510;
-    border-radius: 20px;
-    padding: 24px;
-    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
-    margin-top: 200px;
-  }
+  background: #ffffff;
+  border-radius: 15px;
+  padding: 20px;
+  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
+  margin-top: 150px;
+}
+
+h1 {
+  font-weight: bold;
+  color: #333;
+  margin-bottom: 20px;
+}
+
+.table {
+  border-radius: 12px;
+  overflow: hidden;
+}
+
+.table thead {
+  background: linear-gradient(90deg, #2193b0, #6dd5ed);
+  color: white;
+}
+
+.table tbody tr:hover {
+  background-color: rgba(33, 147, 176, 0.1);
+  transition: 0.2s;
+}
+
+.btn-gradient {
+  background: linear-gradient(90deg, #4facfe, #00f2fe);
+  color: white !important;
+  font-weight: 600;
+  transition: all 0.3s ease;
+}
+.btn-gradient:hover {
+  filter: brightness(1.1);
+  transform: translateY(-2px);
+}
+
+.btn-primary {
+  background: linear-gradient(90deg, #2193b0, #6dd5ed);
+  border: none;
+  font-weight: bold;
+  padding: 10px 18px;
+  border-radius: 8px;
+}
+
+.btn-primary:hover {
+  background: linear-gradient(90deg, #1a82a2, #5cc8db);
+}
+
+.btn-info {
+  background: linear-gradient(90deg, #36d1dc, #5b86e5);
+  border: none;
+}
+
+.btn-danger {
+  background: linear-gradient(90deg, #ff4b2b, #ff416c);
+  border: none;
+}
+
+.btn-info:hover,
+.btn-danger:hover {
+  opacity: 0.9;
+}
 
-  .password-wrapper {
+.modal-content {
+  border-radius: 15px;
+  border: none;
+  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
+}
+
+.toast {
+  border-radius: 10px;
+}
+
+.password-wrapper {
     position: relative;
     display: inline-block;
     width: 100%;
@@ -25,30 +93,33 @@ #usertable {
     cursor: pointer;
     font-size: 18px;
   }
-  .hidden { display: none; }
-  #password-checklist {
-    list-style: none;
-    padding: 0;
-    margin-top: 10px;
-  }
-  #password-checklist li {
-    font-size: 14px;
-    margin-bottom: 5px;
-  }
 
-     .action-btn {
-        width: 50%;
-        padding: 12px;
-        background: linear-gradient(90deg, rgb(71, 71, 71), rgb(74, 143, 68));
-        border: none;
-        color: white;
-        font-size: 16px;
-        font-weight: bold;
-        border-radius: 8px;
-        cursor: pointer;
-        transition: 0.3s;
-    }
-
-    .delete-btn {
-        background: red;
-    }
\ No newline at end of file
+
+
+
+  .edit-modal {
+  backdrop-filter: blur(12px);
+  border-radius: 15px;
+  border: none;
+  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.25);
+}
+
+.edit-modal .modal-header {
+  background: linear-gradient(90deg, #36d1dc, #5b86e5);
+  color: white;
+  border-top-left-radius: 15px;
+  border-top-right-radius: 15px;
+}
+
+.edit-modal .modal-title {
+  font-weight: bold;
+}
+
+.edit-modal .btn-primary {
+  background: linear-gradient(90deg, #36d1dc, #5b86e5);
+  border: none;
+}
+
+.edit-modal .btn-primary:hover {
+  opacity: 0.9;
+}
diff --git a/resources/views/dashboard.blade.php b/resources/views/dashboard.blade.php
index 7db3651..18b0184 100644
--- a/resources/views/dashboard.blade.php
+++ b/resources/views/dashboard.blade.php
@@ -1,196 +1,194 @@
-<!-- the include is for navigation bar -->
 @include('layout.base')
-<title>Dashboard</title>
 <link rel="stylesheet" href="{{ asset('assets/dashboard.css') }}">
+<title>Dashboard</title>
 
-<body>
+<div class="container py-5">
 
-  <main class="main-content" id="main">
-    <div class="header-filter-container">
-      <h1>PLASTIC & NON-PLASTIC ANALYSIS</h1>
-    </div>
+    <!-- Header -->
+    <header>
+        <h1>♻ PLASTIC & NON-PLASTIC ANALYSIS</h1>
+        <hr>
+    </header>
 
-    <div class="count-container">
-      @auth
+    <!-- Stats Cards -->
+    <div class="row g-4 justify-content-center">
+        @auth
         @if(Auth::user()->utype === 'ADM')
-      <div class="count-card" id="usercount"><div>
-        <div class="count-title">Total Users</div>
+        <div class="col-md-3 d-flex">
+            <div class="card text-center flex-fill">
+                <div class="card-body d-flex flex-column justify-content-center">
+                    <h5 class="card-title">Total Users</h5>
+                    <p class="stat-number text-highlight">{{ $userCount ?? 0 }}</p>
+                </div>
+            </div>
         </div>
-        <div class="count-value">{{ $plasticCount ?? 124 }}</div>
-      </div>
         @endif
-      @endauth
-      <div class="count-card">
-        <div class="count-title">Plastic Detected</div>
-        <div class="count-title">Entrance 1</div>
-        <div class="count-value">{{ $plasticCount ?? 124 }}</div>
-    </div>
-      <div class="count-card">
-        <div class="count-title">Plastic Detected</div>
-        <div class="count-title">Entrance 2</div>
-        <div class="count-value">{{ $nonPlasticCount ?? 86 }}</div>
-      </div>
+        @endauth
+
+        <div class="col-md-3 d-flex">
+            <div class="card text-center flex-fill">
+                <div class="card-body d-flex flex-column justify-content-center">
+                    <h5 class="card-title">Plastic Detected</h5>
+                    <h5 class="card-title">Entrance 1</h5>
+                    <p class="stat-number text-highlight">{{ $plasticCount ?? 124 }}</p>
+                </div>
+            </div>
+        </div>
+
+        <div class="col-md-3 d-flex">
+            <div class="card text-center flex-fill">
+                <div class="card-body d-flex flex-column justify-content-center">
+                    <h5 class="card-title">Plastic Detected</h5>
+                    <h5 class="card-title">Entrance 2</h5>
+                    <p class="stat-number text-highlight">{{ $nonPlasticCount ?? 86 }}</p>
+                </div>
+            </div>
+        </div>
     </div>
 
-    <div class="chart-container">
-      <canvas id="weeklyPlasticChart" width="600" height="300"></canvas>
+    <!-- Chart -->
+    <div class="mt-5 chart-card">
+        <h5 class="mb-3">Weekly Detection Trends</h5>
+        <canvas id="weeklyPlasticChart" height="100"></canvas>
     </div>
 
+    <!-- Calendar -->
     <div class="calendar-container">
-      <h2 class="calendar-title" id="calendar-title">Calendar</h2>
-      <table class="calendar-table" id="calendar-table"></table>
+        <h2 class="calendar-title" id="calendar-title">Calendar</h2>
+        <table class="calendar-table" id="calendar-table"></table>
     </div>
-  </main>
+</div>
 
-  <div id="hover-popup"></div>
+<div id="hover-popup"></div>
 
-  <!-- Only the JavaScript part is shown for brevity -->
 <script>
-  function toggleSidebar() {
-    const sidebar = document.getElementById("sidebar");
-    const hamburger = document.getElementById("hamburger-btn");
-    sidebar.classList.toggle("active");
-    hamburger.style.display = sidebar.classList.contains("active") ? "none" : "block";
-  }
-
-  const ctx = document.getElementById('weeklyPlasticChart').getContext('2d');
-  new Chart(ctx, {
-    type: 'line',
-    data: {
-      labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],
-      datasets: [
-        {
-          label: 'Plastic Detections',
-          data: [45, 60, 38, 72],
-          borderColor: 'rgba(75, 192, 192, 1)',
-          backgroundColor: 'rgba(75, 192, 192, 0.2)',
-          tension: 0.3,
-          pointRadius: 5
+    // Chart
+    const ctx = document.getElementById('weeklyPlasticChart').getContext('2d');
+    new Chart(ctx, {
+        type: 'line',
+        data: {
+            labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],
+            datasets: [
+                {
+                    label: 'Plastic Detections',
+                    data: [45, 60, 38, 72],
+                    borderColor: '#4fd1c5',
+                    backgroundColor: 'rgba(79, 209, 197, 0.2)',
+                    fill: true,
+                    tension: 0.4
+                },
+                {
+                    label: 'Non-Plastic Detections',
+                    data: [30, 40, 50, 33],
+                    borderColor: '#ff6384',
+                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
+                    fill: true,
+                    tension: 0.4
+                }
+            ]
         },
-        {
-          label: 'Non-Plastic Detections',
-          data: [30, 40, 50, 33],
-          borderColor: 'rgba(255, 99, 132, 1)',
-          backgroundColor: 'rgba(255, 99, 132, 0.2)',
-          tension: 0.3,
-          pointRadius: 5
-        }
-      ]
-    },
-    options: {
-      responsive: true,
-      plugins: {
-        legend: {
-          position: 'top',
-          labels: { color: '#fff' }
+        options: {
+            responsive: true,
+            plugins: {
+                legend: { labels: { color: 'white' } }
+            },
+            scales: {
+                x: { ticks: { color: 'white' }, grid: { color: 'rgba(255,255,255,0.05)' } },
+                y: { ticks: { color: 'white' }, grid: { color: 'rgba(255,255,255,0.05)' } }
+            }
         }
-      },
-      scales: {
-        x: { ticks: { color: '#fff' }, grid: { color: '#444' } },
-        y: { beginAtZero: true, ticks: { color: '#fff' }, grid: { color: '#444' } }
-      }
-    }
-  });
-
-  const today = new Date();
-  const dailyAnalytics = {};
-  const daysInMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate();
-
-  for (let i = 1; i <= daysInMonth; i++) {
-    const date = new Date(today.getFullYear(), today.getMonth(), i);
-    if (date <= today) {
-      dailyAnalytics[i] = {
-        plastic: Math.floor(Math.random() * 20),
-        nonPlastic: Math.floor(Math.random() * 20)
-      };
-    }
-  }
-
-  function generateCalendar(year, month) {
-    const table = document.getElementById("calendar-table");
-    const title = document.getElementById("calendar-title");
-    const monthNames = ["January","February","March","April","May","June","July","August","September","October","November","December"];
-    title.textContent = `${monthNames[month]} ${year}`;
-    table.innerHTML = "";
-
-    const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
-    const thead = document.createElement("thead");
-    const headerRow = document.createElement("tr");
-    days.forEach(day => {
-      const th = document.createElement("th");
-      th.textContent = day;
-      headerRow.appendChild(th);
     });
-    thead.appendChild(headerRow);
-    table.appendChild(thead);
-
-    const tbody = document.createElement("tbody");
-    const firstDay = new Date(year, month, 1).getDay();
-    const daysInMonth = new Date(year, month + 1, 0).getDate();
-    let date = 1;
-
-    for (let i = 0; i < 6; i++) {
-      const row = document.createElement("tr");
-      for (let j = 0; j < 7; j++) {
-        const cell = document.createElement("td");
-        if (i === 0 && j < firstDay || date > daysInMonth) {
-          cell.textContent = "";
-        } else {
-          cell.textContent = date;
-          cell.setAttribute("data-day", date);
-          date++;
+
+    // Calendar generation
+    const today = new Date();
+    const dailyAnalytics = {};
+    const daysInMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate();
+    for (let i = 1; i <= daysInMonth; i++) {
+        const date = new Date(today.getFullYear(), today.getMonth(), i);
+        if (date <= today) {
+            dailyAnalytics[i] = {
+                plastic: Math.floor(Math.random() * 20),
+                nonPlastic: Math.floor(Math.random() * 20)
+            };
         }
-        row.appendChild(cell);
-      }
-      tbody.appendChild(row);
-      if (date > daysInMonth) break;
     }
-    table.appendChild(tbody);
-  }
-
-  generateCalendar(today.getFullYear(), today.getMonth());
-
-  const popup = document.getElementById("hover-popup");
-
-  document.addEventListener("mousemove", (e) => {
-    const cells = document.querySelectorAll("td[data-day]");
-    let found = false;
-
-    const todayDateOnly = new Date(today);
-    todayDateOnly.setHours(0, 0, 0, 0); // Reset time to compare dates only
-
-    cells.forEach(cell => {
-      const day = parseInt(cell.getAttribute("data-day"));
-      const data = dailyAnalytics[day];
-
-      const cellDate = new Date(today.getFullYear(), today.getMonth(), day);
-      cellDate.setHours(0, 0, 0, 0); // Reset cell date to compare date only
-
-      if (data && cellDate <= todayDateOnly) {
-        const rect = cell.getBoundingClientRect();
-        const dx = e.clientX - (rect.left + rect.width / 2);
-        const dy = e.clientY - (rect.top + rect.height / 2);
-        const distance = Math.sqrt(dx * dx + dy * dy);
-
-        if (distance < 100) {
-          popup.innerHTML = `
-            <strong>Day ${day}</strong><br>
-            🟢 Plastic: <b>${data.plastic}</b><br>
-            🔵 Non-Plastic: <b>${data.nonPlastic}</b>
-          `;
-          popup.style.left = `${e.pageX + 15}px`;
-          popup.style.top = `${e.pageY - 50}px`;
-          popup.style.display = "block";
-          found = true;
-        }
-      }
-    });
 
-    if (!found) {
-      popup.style.display = "none";
+    function generateCalendar(year, month) {
+        const table = document.getElementById("calendar-table");
+        const title = document.getElementById("calendar-title");
+        const monthNames = ["January","February","March","April","May","June","July","August","September","October","November","December"];
+        title.textContent = `${monthNames[month]} ${year}`;
+        table.innerHTML = "";
+
+        const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
+        const thead = document.createElement("thead");
+        const headerRow = document.createElement("tr");
+        days.forEach(day => {
+            const th = document.createElement("th");
+            th.textContent = day;
+            headerRow.appendChild(th);
+        });
+        thead.appendChild(headerRow);
+        table.appendChild(thead);
+
+        const tbody = document.createElement("tbody");
+        const firstDay = new Date(year, month, 1).getDay();
+        const daysInMonth = new Date(year, month + 1, 0).getDate();
+        let date = 1;
+
+        for (let i = 0; i < 6; i++) {
+            const row = document.createElement("tr");
+            for (let j = 0; j < 7; j++) {
+                const cell = document.createElement("td");
+                if (i === 0 && j < firstDay || date > daysInMonth) {
+                    cell.textContent = "";
+                } else {
+                    cell.textContent = date;
+                    cell.setAttribute("data-day", date);
+                    date++;
+                }
+                row.appendChild(cell);
+            }
+            tbody.appendChild(row);
+            if (date > daysInMonth) break;
+        }
+        table.appendChild(tbody);
     }
-  });
+    generateCalendar(today.getFullYear(), today.getMonth());
+
+    // Hover popup
+    const popup = document.getElementById("hover-popup");
+    document.addEventListener("mousemove", (e) => {
+        const cells = document.querySelectorAll("td[data-day]");
+        let found = false;
+        const todayDateOnly = new Date(today);
+        todayDateOnly.setHours(0, 0, 0, 0);
+
+        cells.forEach(cell => {
+            const day = parseInt(cell.getAttribute("data-day"));
+            const data = dailyAnalytics[day];
+            const cellDate = new Date(today.getFullYear(), today.getMonth(), day);
+            cellDate.setHours(0, 0, 0, 0);
+
+            if (data && cellDate <= todayDateOnly) {
+                const rect = cell.getBoundingClientRect();
+                const dx = e.clientX - (rect.left + rect.width / 2);
+                const dy = e.clientY - (rect.top + rect.height / 2);
+                const distance = Math.sqrt(dx * dx + dy * dy);
+
+                if (distance < 100) {
+                    popup.innerHTML = `
+                        <strong>Day ${day}</strong><br>
+                        🟢 Plastic: <b>${data.plastic}</b><br>
+                        🔵 Non-Plastic: <b>${data.nonPlastic}</b>
+                    `;
+                    popup.style.left = `${e.pageX + 15}px`;
+                    popup.style.top = `${e.pageY - 50}px`;
+                    popup.style.display = "block";
+                    found = true;
+                }
+            }
+        });
+        if (!found) popup.style.display = "none";
+    });
 </script>
-
-</body>
-</html>
diff --git a/resources/views/profile/Admin/user-management.blade.php b/resources/views/profile/Admin/user-management.blade.php
index 4e5cbc9..19bc5c0 100644
--- a/resources/views/profile/Admin/user-management.blade.php
+++ b/resources/views/profile/Admin/user-management.blade.php
@@ -2,54 +2,117 @@
 <title>User Management</title>
 <link rel="stylesheet" href="{{ asset('assets/user-management.css') }}">
 
-<div class="main-content" id="main-content">
-  <div class="container-fluid">
-    <div class="table-responsive" id="usertable">
-      <h1>Manage Analysts</h1>
-      <div class="text-end mb-3">
-        <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#popupForm">Create Analyst</a>
+<div class="main-content py-5" id="main-content">
+  <div class="container">
+    <div class="card shadow-lg border-0 rounded-4 p-4" id="usertable">
+      <div class="d-flex justify-content-between align-items-center mb-4">
+        <h1 class="fw-bold text-primary mb-0">Manage Analysts</h1>
+        <a class="btn btn-gradient px-4 py-2 rounded-pill" data-bs-toggle="modal" data-bs-target="#popupForm">
+          + Create Analyst
+        </a>
       </div>
-      <table class="table table-bordered table-light table-striped text-center">
-        <thead class="table-info">
-          <tr>
-            <th>ID</th>
-            <th>FIRST NAME</th>
-            <th>LAST NAME</th>
-            <th>EMAIL</th>
-            <th>ACTION</th>
-          </tr>
-        </thead>
-        <tbody>
+
+      <div class="table-responsive">
+        <table class="table table-hover align-middle">
+          <thead class="table-gradient text-white">
+            <tr>
+              <th>ID</th>
+              <th>First Name</th>
+              <th>Last Name</th>
+              <th>Email</th>
+              <th>Action</th>
+            </tr>
+          </thead>
+          <tbody>
             @foreach($analysts as $analyst)
-          <tr>
-            <td>{{ $analyst->id }}</td>
-            <td>{{ $analyst->first_name }}</td>
-            <td>{{ $analyst->last_name }}</td>
-            <td>{{ $analyst->email }}</td>
-            <td>
-              <form action="#" style="display: inline;">
-                @csrf
-                <button type="submit" class="btn btn-info">
-                  <i class="fa fa-edit"></i> Edit Account
-                </button>
-              </form>
-              <form action="{{ route('admin.delete-user', $analyst->id) }}" method="POST" style="display: inline;">
-                @csrf
-                @method('DELETE')
-                <button type="submit" class="btn btn-danger"
-                  onclick="return confirm('Are you sure you want to delete this account? This action cannot be undone.')">
-                  <i class="fa fa-times"></i> Delete Account
-                </button>
-              </form>
-            </td>
-          </tr>
-          @endforeach
-        </tbody>
-      </table>
+              <tr>
+                <td>{{ $analyst->id }}</td>
+                <td>{{ $analyst->first_name }}</td>
+                <td>{{ $analyst->last_name }}</td>
+                <td>{{ $analyst->email }}</td>
+                <td>
+                  <button class="btn btn-outline-primary btn-sm me-2" data-bs-toggle="modal" data-bs-target="#editUserModal{{ $analyst->id }}"><i class="fa fa-edit me-1"></i>Edit</button>
+
+                  <div class="modal fade" id="editUserModal{{ $analyst->id }}" tabindex="-1" aria-hidden="true">
+                    <div class="modal-dialog modal-dialog-centered modal-lg">
+                      <div class="modal-content edit-modal bg-secondary">
+                        <div class="modal-header">
+                          <h5 class="modal-title"><i class="fas fa-user-edit"></i> Edit Analyst</h5>
+                          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
+                        </div>
+
+                        <form action="{{ route('admin.edit-user', $analyst->id) }}" method="POST" class="edit-user-form">
+                          @csrf
+                          @method('PUT')
+                          <div class="modal-body">
+                            <div class="row g-3">
+                              <div class="col-md-6">
+                                <label class="form-label">First Name</label>
+                                <input type="text" name="first_name" class="form-control"
+                                      value="{{ old('first_name', $analyst->first_name) }}" required>
+                              </div>
+                              <div class="col-md-6">
+                                <label class="form-label">Last Name</label>
+                                <input type="text" name="last_name" class="form-control"
+                                      value="{{ old('last_name', $analyst->last_name) }}" required>
+                              </div>
+                              <div class="col-md-12">
+                                <label class="form-label">Email</label>
+                                <input type="email" name="email" class="form-control"
+                                      value="{{ old('email', $analyst->email) }}" required>
+                              </div>
+                              <div class="col-md-6">
+                                <label class="form-label">New Password</label>
+                                <div class="password-wrapper">
+                                  <input type="password" name="password" id="edit_password_{{ $analyst->id }}" class="form-control">
+                                  <button type="button" class="toggle-password" data-target="edit_password_{{ $analyst->id }}">👁️</button>
+                                </div>
+                                <small class="text-light">Leave blank to keep current password</small>
+                                <ul id="edit-password-checklist-{{ $analyst->id }}" class="mt-2" style="display:none;">
+                                  <li class="length">✖ At least 8 characters</li>
+                                  <li class="lowercase">✖ At least one lowercase letter</li>
+                                  <li class="uppercase">✖ At least one uppercase letter</li>
+                                  <li class="number">✖ At least one number</li>
+                                  <li class="special">✖ At least one special character (@$!%*?&)</li>
+                                </ul>
+                              </div>
+                              <div class="col-md-6">
+                                <label class="form-label">Confirm Password</label>
+                                <div class="password-wrapper">
+                                  <input type="password" name="password_confirmation" id="edit_password_confirmation_{{ $analyst->id }}" class="form-control">
+                                  <button type="button" class="toggle-password" data-target="edit_password_confirmation_{{ $analyst->id }}">👁️</button>
+                                </div>
+                              </div>
+                            </div>
+                          </div>
+                          <div class="modal-footer">
+                            <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
+                            <button type="submit" class="btn btn-primary">Update</button>
+                          </div>
+                        </form>
+                      </div>
+                    </div>
+                  </div>
+
+                  <form action="{{ route('admin.delete-user', $analyst->id) }}" method="POST" class="d-inline">
+                    @csrf
+                    @method('DELETE')
+                    <button class="btn btn-outline-danger btn-sm"
+                      onclick="return confirm('Delete this account?')">
+                      <i class="fa fa-trash me-1"></i>Delete
+                    </button>
+                  </form>
+                </td>
+              </tr>
+            @endforeach
+          </tbody>
+        </table>
+      </div>
     </div>
   </div>
 </div>
 
+
 @if(session('success'))
 <div class="toast position-fixed bottom-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true"
      data-bs-delay="3000" data-bs-autohide="true">
@@ -73,7 +136,7 @@
 
 <div class="modal fade" id="popupForm" tabindex="-1" aria-labelledby="popupFormLabel" aria-hidden="true">
   <div class="modal-dialog">
-    <div class="modal-content bg-light bg-opacity-75">
+    <div class="modal-content bg-secondary bg-opacity-75">
       <div class="modal-header">
         <h5 class="modal-title" id="popupFormLabel">Create Analyst</h5>
         <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
@@ -134,7 +197,6 @@
 </div>
 
 <script>
-  // Toggle password visibility
   document.querySelectorAll(".toggle-password").forEach(button => {
     button.addEventListener("click", function () {
       const field = document.getElementById(this.dataset.target);
@@ -143,7 +205,6 @@
     });
   });
 
-  // Password checklist
   const checklist = { length: false, lowercase: false, uppercase: false, number: false, special: false };
 
   document.getElementById("password").addEventListener("input", function () {
@@ -165,7 +226,6 @@ function updateChecklist(id, isValid) {
     item.textContent = `${isValid ? '✔' : '✖'} ${item.textContent.slice(2)}`;
   }
 
-  // Form validation
   document.getElementById("register-form").addEventListener("submit", function (event) {
     const password = document.getElementById("password").value;
     const confirmPassword = document.getElementById("password_confirmation").value;
@@ -178,4 +238,48 @@ function updateChecklist(id, isValid) {
       event.preventDefault();
     }
   });
+  
+
+  document.querySelectorAll(".edit-user-form").forEach(form => {
+  const userId = form.querySelector("[name=password]").id.split("_").pop();
+  const passwordInput = document.getElementById(`edit_password_${userId}`);
+  const confirmInput = document.getElementById(`edit_password_confirmation_${userId}`);
+  const checklist = document.getElementById(`edit-password-checklist-${userId}`);
+
+  const requirements = {
+    length: /.{8,}/,
+    lowercase: /[a-z]/,
+    uppercase: /[A-Z]/,
+    number: /\d/,
+    special: /[@$!%*?&]/
+  };
+
+  passwordInput.addEventListener("input", function () {
+    if (this.value) {
+      checklist.style.display = "block";
+      checklist.querySelectorAll("li").forEach(item => {
+        const key = item.className;
+        const valid = requirements[key].test(this.value);
+        item.style.color = valid ? "lime" : "red";
+        item.textContent = `${valid ? '✔' : '✖'} ${item.textContent.slice(2)}`;
+      });
+    } else {
+      checklist.style.display = "none";
+    }
+  });
+
+  form.addEventListener("submit", function (event) {
+    if (passwordInput.value) {
+      const allValid = Object.values(requirements).every(regex => regex.test(passwordInput.value));
+      if (!allValid) {
+        alert("New password does not meet all requirements.");
+        event.preventDefault();
+      } else if (passwordInput.value !== confirmInput.value) {
+        alert("Passwords do not match.");
+        event.preventDefault();
+      }
+    }
+  });
+});
+
 </script>
\ No newline at end of file
diff --git a/routes/web.php b/routes/web.php
index 5d66b24..463980c 100644
--- a/routes/web.php
+++ b/routes/web.php
@@ -86,7 +86,18 @@
 */
 Route::middleware(['auth', TwoFactorMiddleware::class])->group(function () {
     Route::get('/dashboard', function () {
-        return view('dashboard');
+        $stats = [
+        'visitors' => 15230,
+        'pageViews' => 40213,
+        'bounceRate' => 47.3,
+        'sessionDuration' => '3m 25s'
+    ];
+
+    $chartData = [
+        'labels' => ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
+        'values' => [1200, 1500, 1700, 1300, 1900, 2300, 2000]
+    ];
+    return view('dashboard', compact('stats', 'chartData'));
     })->name('dashboard');
 });
 
@@ -103,6 +114,7 @@
     // User Management
     Route::get('/admin/user-management', [SubAdminController::class, 'index'])->name('admin.user-management');
     Route::post('/admin/user-management/create-analyst', [SubAdminController::class, 'store'])->name('admin.create-analyst');
+    Route::put('/admin/user-management/{id}', [SubAdminController::class, 'update'])->name('admin.edit-user');
     Route::delete('/admin/user-management/{id}', [SubAdminController::class, 'destroy'])->name('admin.delete-user');
 });
 
-- 
2.49.0.windows.1

